"""update_jobs_table_for_job_posting

Revision ID: 3b3b1a3f2173
Revises: 004
Create Date: 2025-10-08 23:15:26.757392

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '3b3b1a3f2173'
down_revision = '004'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add new columns to jobs table
    op.add_column('jobs', sa.Column('company', sa.String(255), nullable=False, server_default=''))
    op.add_column('jobs', sa.Column('job_type', sa.String(50), nullable=False, server_default='full-time'))
    op.add_column('jobs', sa.Column('salary_min', sa.Integer(), nullable=True))
    op.add_column('jobs', sa.Column('salary_max', sa.Integer(), nullable=True))
    op.add_column('jobs', sa.Column('currency', sa.String(3), nullable=False, server_default='USD'))
    op.add_column('jobs', sa.Column('requirements', sa.String(), nullable=True))
    op.add_column('jobs', sa.Column('benefits', sa.String(), nullable=True))
    op.add_column('jobs', sa.Column('skills_required', sa.String(), nullable=True))
    op.add_column('jobs', sa.Column('experience_level', sa.String(), nullable=False, server_default='entry'))
    op.add_column('jobs', sa.Column('remote_work', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('jobs', sa.Column('application_deadline', sa.DateTime(), nullable=True))
    op.add_column('jobs', sa.Column('contact_email', sa.String(), nullable=False, server_default=''))
    op.add_column('jobs', sa.Column('department', sa.String(), nullable=True))
    op.add_column('jobs', sa.Column('views', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('jobs', sa.Column('applications_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('jobs', sa.Column('posted_by', sa.Integer(), nullable=False, server_default='1'))
    
    # Alter location column
    op.alter_column('jobs', 'location',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    # Create index for posted_by
    op.create_index(op.f('ix_jobs_posted_by'), 'jobs', ['posted_by'], unique=False)
    
    # Create foreign key for posted_by
    op.create_foreign_key(None, 'jobs', 'users', ['posted_by'], ['id'])
    
    # Alter user columns
    op.alter_column('users', 'first_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'phone',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'linkedin_url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'profile_picture',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('users', 'website',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'website',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'profile_picture',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'linkedin_url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'phone',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'last_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'first_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('jobs', sa.Column('posted_by_employee_id', sa.INTEGER(), nullable=False))
    op.add_column('jobs', sa.Column('company_id', sa.INTEGER(), nullable=False))
    op.add_column('jobs', sa.Column('skills', sa.VARCHAR(), nullable=True))
    op.add_column('jobs', sa.Column('min_experience', sa.INTEGER(), nullable=True))
    op.add_column('jobs', sa.Column('employment_type', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.create_foreign_key(None, 'jobs', 'companies', ['company_id'], ['id'])
    op.create_foreign_key(None, 'jobs', 'employees', ['posted_by_employee_id'], ['id'])
    op.drop_index(op.f('ix_jobs_posted_by'), table_name='jobs')
    op.create_index('ix_jobs_posted_by_employee_id', 'jobs', ['posted_by_employee_id'], unique=False)
    op.create_index('ix_jobs_company_id', 'jobs', ['company_id'], unique=False)
    op.alter_column('jobs', 'location',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('jobs', 'posted_by')
    op.drop_column('jobs', 'applications_count')
    op.drop_column('jobs', 'views')
    op.drop_column('jobs', 'department')
    op.drop_column('jobs', 'contact_email')
    op.drop_column('jobs', 'application_deadline')
    op.drop_column('jobs', 'remote_work')
    op.drop_column('jobs', 'experience_level')
    op.drop_column('jobs', 'skills_required')
    op.drop_column('jobs', 'benefits')
    op.drop_column('jobs', 'requirements')
    op.drop_column('jobs', 'currency')
    op.drop_column('jobs', 'salary_max')
    op.drop_column('jobs', 'salary_min')
    op.drop_column('jobs', 'job_type')
    op.drop_column('jobs', 'company')
    op.create_table('user_profile_completion',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('completion_percentage', sa.INTEGER(), nullable=False),
    sa.Column('completed_sections', sqlite.JSON(), nullable=True),
    sa.Column('missing_sections', sqlite.JSON(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('ix_user_profile_completion_user_id', 'user_profile_completion', ['user_id'], unique=False)
    op.create_table('job_recommendations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), nullable=False),
    sa.Column('match_score', sa.FLOAT(), nullable=False),
    sa.Column('recommendation_reasons', sqlite.JSON(), nullable=True),
    sa.Column('is_viewed', sa.BOOLEAN(), nullable=False),
    sa.Column('is_applied', sa.BOOLEAN(), nullable=False),
    sa.Column('is_saved', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_job_recommendations_user_id', 'job_recommendations', ['user_id'], unique=False)
    op.create_index('ix_job_recommendations_job_id', 'job_recommendations', ['job_id'], unique=False)
    op.create_table('saved_searches',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('query', sa.VARCHAR(length=500), nullable=False),
    sa.Column('filters', sqlite.JSON(), nullable=True),
    sa.Column('last_run', sa.DATETIME(), nullable=True),
    sa.Column('new_results_count', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_saved_searches_user_id', 'saved_searches', ['user_id'], unique=False)
    op.create_table('activity_feed',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('activity_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('action_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('activity_metadata', sqlite.JSON(), nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), nullable=False),
    sa.Column('read_at', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_activity_feed_user_id', 'activity_feed', ['user_id'], unique=False)
    op.create_index('ix_activity_feed_is_read', 'activity_feed', ['is_read'], unique=False)
    op.create_index('ix_activity_feed_activity_type', 'activity_feed', ['activity_type'], unique=False)
    op.create_table('dashboard_stats',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('stats_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('stats_data', sqlite.JSON(), nullable=True),
    sa.Column('period', sa.VARCHAR(length=20), nullable=False),
    sa.Column('calculated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_dashboard_stats_user_id', 'dashboard_stats', ['user_id'], unique=False)
    op.create_table('referral_requests',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('jobseeker_id', sa.INTEGER(), nullable=False),
    sa.Column('jobseeker_name', sa.VARCHAR(), nullable=False),
    sa.Column('jobseeker_email', sa.VARCHAR(), nullable=False),
    sa.Column('jobseeker_phone', sa.VARCHAR(), nullable=True),
    sa.Column('linkedin_url', sa.VARCHAR(), nullable=True),
    sa.Column('resume_filename', sa.VARCHAR(), nullable=True),
    sa.Column('resume_file_path', sa.VARCHAR(), nullable=True),
    sa.Column('resume_file_size', sa.INTEGER(), nullable=True),
    sa.Column('resume_mime_type', sa.VARCHAR(), nullable=True),
    sa.Column('personal_note', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('priority', sa.VARCHAR(), nullable=False),
    sa.Column('employee_response', sa.VARCHAR(), nullable=True),
    sa.Column('employee_notes', sa.VARCHAR(), nullable=True),
    sa.Column('responded_at', sa.DATETIME(), nullable=True),
    sa.Column('request_metadata', sqlite.JSON(), nullable=True),
    sa.Column('viewed_by_employee', sa.BOOLEAN(), nullable=False),
    sa.Column('viewed_at', sa.DATETIME(), nullable=True),
    sa.Column('last_activity', sa.DATETIME(), nullable=True),
    sa.Column('notification_sent', sa.BOOLEAN(), nullable=False),
    sa.Column('notification_sent_at', sa.DATETIME(), nullable=True),
    sa.Column('reminder_sent', sa.BOOLEAN(), nullable=False),
    sa.Column('reminder_sent_at', sa.DATETIME(), nullable=True),
    sa.Column('response_time_hours', sa.FLOAT(), nullable=True),
    sa.Column('outcome', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['jobseeker_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_referral_requests_status', 'referral_requests', ['status'], unique=False)
    op.create_index('ix_referral_requests_jobseeker_id', 'referral_requests', ['jobseeker_id'], unique=False)
    op.create_index('ix_referral_requests_jobseeker_email', 'referral_requests', ['jobseeker_email'], unique=False)
    op.create_index('ix_referral_requests_job_id', 'referral_requests', ['job_id'], unique=False)
    op.create_index('ix_referral_requests_employee_id', 'referral_requests', ['employee_id'], unique=False)
    # ### end Alembic commands ###
