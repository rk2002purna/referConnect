"""add_phone_country_code_to_users

Revision ID: d83159a10bfc
Revises: 8d2d3fa38088
Create Date: 2025-10-21 17:44:30.523463

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision = 'd83159a10bfc'
down_revision = '8d2d3fa38088'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('educations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('degree', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('school', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_educations_user_id'), 'educations', ['user_id'], unique=False)
    op.drop_table('education')
    op.alter_column('certifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('certifications', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('certifications', 'date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=7),
               existing_nullable=False)
    op.create_index(op.f('ix_certifications_user_id'), 'certifications', ['user_id'], unique=False)
    op.drop_constraint(op.f('certifications_user_id_fkey'), 'certifications', type_='foreignkey')
    op.create_foreign_key(None, 'certifications', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('companies_domain_key'), 'companies', type_='unique')
    op.drop_index(op.f('idx_companies_domain'), table_name='companies')
    op.create_index(op.f('ix_companies_domain'), 'companies', ['domain'], unique=True)
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=False)
    op.drop_column('companies', 'updated_at')
    op.drop_column('companies', 'description')
    op.drop_column('companies', 'is_verified')
    op.drop_column('companies', 'logo_url')
    op.drop_column('companies', 'created_at')
    op.drop_column('companies', 'size')
    op.drop_column('companies', 'industry')
    op.drop_column('companies', 'website')
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('employees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('employees', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('employees', 'badges',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.create_index(op.f('ix_employees_company_id'), 'employees', ['company_id'], unique=False)
    op.create_index(op.f('ix_employees_user_id'), 'employees', ['user_id'], unique=False)
    op.drop_constraint(op.f('employees_user_id_fkey'), 'employees', type_='foreignkey')
    op.create_foreign_key(None, 'employees', 'users', ['user_id'], ['id'])
    op.alter_column('experiences', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('experiences', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('experiences', 'start_date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=7),
               existing_nullable=False)
    op.alter_column('experiences', 'end_date',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(length=7),
               existing_nullable=True)
    op.alter_column('experiences', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('experiences', 'current',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.create_index(op.f('ix_experiences_user_id'), 'experiences', ['user_id'], unique=False)
    op.drop_constraint(op.f('experiences_user_id_fkey'), 'experiences', type_='foreignkey')
    op.create_foreign_key(None, 'experiences', 'users', ['user_id'], ['id'])
    op.alter_column('job_seekers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('job_seekers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('job_seekers', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('job_seekers', 'skills',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'certifications',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'preferred_job_types',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'industries',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'languages',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'privacy_excluded_companies',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'trust_score',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0.00'))
    op.create_index(op.f('ix_job_seekers_user_id'), 'job_seekers', ['user_id'], unique=False)
    op.drop_constraint(op.f('job_seekers_user_id_fkey'), 'job_seekers', type_='foreignkey')
    op.create_foreign_key(None, 'job_seekers', 'users', ['user_id'], ['id'])
    op.alter_column('jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('jobs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('jobs', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('jobs', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               nullable=False)
    op.alter_column('jobs', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.drop_index(op.f('idx_jobs_company_id'), table_name='jobs')
    op.drop_index(op.f('idx_jobs_employee_id'), table_name='jobs')
    op.create_index(op.f('ix_jobs_is_active'), 'jobs', ['is_active'], unique=False)
    op.create_index(op.f('ix_jobs_title'), 'jobs', ['title'], unique=False)
    op.drop_constraint(op.f('jobs_employee_id_fkey'), 'jobs', type_='foreignkey')
    op.drop_constraint(op.f('jobs_company_id_fkey'), 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'company_id')
    op.drop_column('jobs', 'employment_type')
    op.drop_column('jobs', 'min_experience')
    op.drop_column('jobs', 'skills')
    op.drop_column('jobs', 'employee_id')
    op.add_column('referrals', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.alter_column('referrals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('referrals', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('referrals', 'job_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('referrals', 'seeker_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('referrals', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('referrals', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('pending', 'accepted', 'declined', 'submitted', 'hired', 'rejected', name='referralstatus'),
               nullable=False,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('referrals', 'notes',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.drop_index(op.f('idx_referrals_employee_id'), table_name='referrals')
    op.drop_index(op.f('idx_referrals_job_id'), table_name='referrals')
    op.drop_index(op.f('idx_referrals_seeker_id'), table_name='referrals')
    op.create_index(op.f('ix_referrals_employee_id'), 'referrals', ['employee_id'], unique=False)
    op.create_index(op.f('ix_referrals_job_id'), 'referrals', ['job_id'], unique=False)
    op.create_index(op.f('ix_referrals_seeker_id'), 'referrals', ['seeker_id'], unique=False)
    op.create_index(op.f('ix_referrals_status'), 'referrals', ['status'], unique=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'email_domain',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'is_email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('employee', 'jobseeker', 'admin', name='userrole'),
               existing_nullable=False)
    op.alter_column('users', 'mfa_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'bio',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('users', 'resume_url',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_email_domain'), table_name='users')
    op.drop_index(op.f('idx_users_role'), table_name='users')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_email_domain'), 'users', ['email_domain'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email_domain'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('idx_users_email_domain'), 'users', ['email_domain'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    op.alter_column('users', 'resume_url',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'mfa_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('employee', 'jobseeker', 'admin', name='userrole'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'is_email_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'email_domain',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('ix_referrals_status'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_seeker_id'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_job_id'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_employee_id'), table_name='referrals')
    op.create_index(op.f('idx_referrals_seeker_id'), 'referrals', ['seeker_id'], unique=False)
    op.create_index(op.f('idx_referrals_job_id'), 'referrals', ['job_id'], unique=False)
    op.create_index(op.f('idx_referrals_employee_id'), 'referrals', ['employee_id'], unique=False)
    op.alter_column('referrals', 'notes',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('referrals', 'status',
               existing_type=sa.Enum('pending', 'accepted', 'declined', 'submitted', 'hired', 'rejected', name='referralstatus'),
               type_=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('referrals', 'employee_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('referrals', 'seeker_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('referrals', 'job_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('referrals', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('referrals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('referrals', 'deleted_at')
    op.add_column('jobs', sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('skills', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('min_experience', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('employment_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('jobs', sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('jobs_company_id_fkey'), 'jobs', 'companies', ['company_id'], ['id'])
    op.create_foreign_key(op.f('jobs_employee_id_fkey'), 'jobs', 'employees', ['employee_id'], ['id'])
    op.drop_index(op.f('ix_jobs_title'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_is_active'), table_name='jobs')
    op.create_index(op.f('idx_jobs_employee_id'), 'jobs', ['employee_id'], unique=False)
    op.create_index(op.f('idx_jobs_company_id'), 'jobs', ['company_id'], unique=False)
    op.alter_column('jobs', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('jobs', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('jobs', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('jobs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'job_seekers', type_='foreignkey')
    op.create_foreign_key(op.f('job_seekers_user_id_fkey'), 'job_seekers', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_job_seekers_user_id'), table_name='job_seekers')
    op.alter_column('job_seekers', 'trust_score',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0.00'))
    op.alter_column('job_seekers', 'privacy_excluded_companies',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'languages',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'industries',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'preferred_job_types',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'certifications',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'skills',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('job_seekers', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('job_seekers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('job_seekers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'experiences', type_='foreignkey')
    op.create_foreign_key(op.f('experiences_user_id_fkey'), 'experiences', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_experiences_user_id'), table_name='experiences')
    op.alter_column('experiences', 'current',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('experiences', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('experiences', 'end_date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=7),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('experiences', 'start_date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=7),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('experiences', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('experiences', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.create_foreign_key(op.f('employees_user_id_fkey'), 'employees', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_employees_user_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_company_id'), table_name='employees')
    op.alter_column('employees', 'badges',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('employees', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('employees', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('companies', sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('size', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('logo_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_index(op.f('ix_companies_domain'), table_name='companies')
    op.create_index(op.f('idx_companies_domain'), 'companies', ['domain'], unique=False)
    op.create_unique_constraint(op.f('companies_domain_key'), 'companies', ['domain'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'certifications', type_='foreignkey')
    op.create_foreign_key(op.f('certifications_user_id_fkey'), 'certifications', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_certifications_user_id'), table_name='certifications')
    op.alter_column('certifications', 'date',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=7),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('certifications', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('certifications', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_table('education',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('degree', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('school', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('education_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('education_pkey'))
    )
    op.drop_index(op.f('ix_educations_user_id'), table_name='educations')
    op.drop_table('educations')
    # ### end Alembic commands ###
